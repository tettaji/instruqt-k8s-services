type: track
version: 0.0.1
slug: kubernetes-services
icon: https://storage.googleapis.com/instruqt-frontend/img/tracks/kubernetes.png
title: Exposing a Kubernetes app
teaser: Using Services to expose your app to the outside world
description: |-
  In order to connect several applications within your Kubernetes cluster, 
  or to be able to connect to an app from outside your cluster, resources called "Services" are used.
tags:
- kubernetes
challenges:
- slug: expose-an-app
  credits: 10
  title: Expose an app
  teaser: Create your first service on Kubernetes
  notes:
  - type: text
    title: ""
    contents: A **Service** defines how an application is **exposed** on your cluster.
  - type: text
    title: ""
    contents: |-
      Services can be defined as one of several types
      * ClusterIP - the default type, used to connect applications within your cluster
      * NodePort - exposing a specific port on the node your application is running on
      * LoadBalancer - creating an external loadbalancer with a supported cloud provider
  - type: text
    title: ""
    contents: In these challenges, we'll focus on creating **ClusterIP** and **NodePort**
      services
  - type: text
    title: ""
    contents: |-
      The easiest way to create a Service and expose an app is by using **kubectl expose**. For example
      ```
      kubectl expose deployment <deploymentname> --port=80 --target-port=8080
      ```
      See `kubectl expose --help` for more options
  assignment: |-
    An **nginx** deployment with one pod is already running.

    Create a service of type **NodePort** by using **kubectl expose**.
    Expose it on port **8080**, but check the deployment using **kubectl describe** to get the required target-port.

    You can check the **Service** tab to see if the nginx service is exposed publicly.
  difficulty: basic
  unlocks:
  - expose-an-app-using-a-definition-file
  tabs:
  - type: terminal
    title: Shell
    hostname: kubernetes
  - type: service
    title: Kubernetes
    hostname: kubernetes
    port: 8001
    path: "/api/v1/namespaces/kube-system/services/kubernetes-dashboard/proxy/#!/deployment?namespace=default"
  - type: service
    title: Service
    hostname: kubernetes
    port: 8001
    path: "/api/v1/namespaces/default/services/nginx/proxy/"
- slug: expose-an-app-using-a-definition-file
  credits: 10
  title: Expose an app using a definition file
  teaser: Expose an app using a definition file
  notes:
  - type: text
    title: YAML definition for a Service
    contents: The CLI command `kubectl expose` creates a Service. This is fine for testing purposes, but we would like a 
  - type: text
    title: YAML definition for a Service
    contents: In order to store all our deployment scripts under version control, it is easier to store the representation of the Service in a YAML file.
  - type: text
    title: YAML definition for a Service
    contents: |-
      For a basic Service, the port definition looks as follows

      ```
      ports:
        - port: <Exposed port>
          targetPort: <Port in container>
          protocol: TCP
      ```
  assignment: |-
    The **nginx** deployment is still running.

    We have prepared a Service definition for you in the file **nginx-service.yml**.

    Finish the Service definition by editing the YAML file and exposing the nginx application on port 30000.
  difficulty: basic
  unlocks: []
  tabs:
  - type: terminal
    title: Shell
    hostname: kubernetes
developers:
- tettaji@xebia.com
- eswets@gmail.com
published: false

